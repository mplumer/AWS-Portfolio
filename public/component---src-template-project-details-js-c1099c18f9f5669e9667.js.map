{"version":3,"sources":["webpack:///./src/template/project-details.js","webpack:///./src/elements/image.js"],"names":["ProjectDetails","data","projectData","projectJson","projectImage","features","className","title","category","body","fluid","featured_image","childImageSharp","map","index","key","image","NonStretchedImage","props","alignment","normalizedProps","aspectRatio","align","presentationWidth","style","maxWidth","margin"],"mappings":"8FAAA,yFAwFeA,UAlFQ,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACfC,EAAcD,EAAKE,YACnBC,EAAeH,EAAKE,YAAYE,SACtC,OACI,kBAAC,IAAD,KACI,yBAAKC,UAAU,yDACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,gBAAgBJ,EAAYK,QAE9C,wBAAID,UAAU,UAAd,WACA,wBAAIA,UAAU,eACV,4BAAI,0BAAMA,UAAU,QAAO,kBAAC,IAAD,MAAvB,uBAA2D,0BAAMA,UAAU,eAAeJ,EAAYM,YAE9G,uBAAGF,UAAU,UAAUJ,EAAYO,UAMnD,yBAAKH,UAAU,wCACX,kBAAC,IAAD,CAAOI,MAAOR,EAAYS,eAAeC,gBAAgBF,SAG7D,yBAAKJ,UAAU,eACVF,EAAaS,KAAI,SAACZ,EAAMa,GAAP,OACd,yBAAKR,UAAU,sBAAsBS,IAAKD,GACtC,kBAAC,IAAD,CAAKJ,MAAOT,EAAKe,MAAMJ,gBAAgBF,qB,kCCxCnF,8CA6BeO,IA1BW,SAAAC,GACtB,IAEIC,EAFAC,EAAkBF,EAsBtB,OArBAE,EAAe,iBAAOA,EAAgBV,MAAvB,CAA8BW,YAAa,IAGtDF,EADe,UAAhBD,EAAMI,MACO,aACU,SAAhBJ,EAAMI,MACA,aAEA,SAGZJ,EAAMR,OAASQ,EAAMR,MAAMa,oBAC3BH,EAAe,iBACRF,EADQ,CAEXM,MAAM,OAAD,UACGN,EAAMM,OAAS,GADlB,CAEDC,SAAUP,EAAMR,MAAMa,kBACtBG,OAAQP,OAKb,kBAAC,IAAQC","file":"component---src-template-project-details-js-c1099c18f9f5669e9667.js","sourcesContent":["import React from 'react';\r\nimport Img from \"gatsby-image\";\r\nimport Image from \"../elements/image\";\r\nimport { FiList } from \"react-icons/fi\";\r\nimport Layout from \"../components/layout\";\r\n\r\nconst ProjectDetails = ({data}) => {\r\n    const projectData = data.projectJson;\r\n    const projectImage = data.projectJson.features;\r\n    return (\r\n        <Layout>\r\n            <div className=\"rn-project-details-area rn-section-gap bg-color-white\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"inner\">\r\n                                <div className=\"portfolio-content\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-12 col-md-12 col-12\">\r\n                                            <div className=\"content-left\">\r\n                                                <div className=\"page-top\">\r\n                                                    <h1 className=\"title_holder\">{projectData.title}</h1>\r\n                                                </div>\r\n                                                <h3 className=\"mt--20\">Details</h3>\r\n                                                <ul className=\"list_holder\">\r\n                                                    <li><span className=\"icon\"><FiList />Highlighted Skills:</span><span className=\"projectinfo\">{projectData.category}</span></li>\r\n                                                </ul>\r\n                                                <p className=\"mt--20\">{projectData.body}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"thumbnail mt--90 mt_md--40 mt_sm--40\">\r\n                                    <Image fluid={projectData.featured_image.childImageSharp.fluid} />\r\n                                </div>\r\n\r\n                                <div className=\"image-group\">\r\n                                    {projectImage.map((data, index) => (\r\n                                        <div className=\"single-image mt--30\" key={index}>\r\n                                            <Img fluid={data.image.childImageSharp.fluid} />\r\n                                        </div>\r\n                                    ))}\r\n                                </div>   \r\n\r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport const query = graphql `\r\n    query($id: String!) {\r\n        projectJson(id: {eq: $id}) {\r\n            id\r\n            title\r\n            body\r\n            category\r\n            repo\r\n            deployed\r\n            featured_image {\r\n                childImageSharp {\r\n                    fluid(maxHeight: 1000, maxWidth: 1920, quality: 100) {\r\n                        ...GatsbyImageSharpFluid_withWebp\r\n                        presentationHeight\r\n                        presentationWidth\r\n                    }\r\n                }\r\n            },\r\n            features {\r\n                image {\r\n                    childImageSharp {\r\n                      fluid(maxWidth: 1920, maxHeight: 1280, quality: 100) {\r\n                        ...GatsbyImageSharpFluid_withWebp\r\n                        presentationWidth\r\n                        presentationHeight\r\n                      }\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n`;\r\nexport default ProjectDetails;","import React from \"react\";\r\nimport Img from \"gatsby-image\";\r\n\r\nconst NonStretchedImage = props => {\r\n    let normalizedProps = props\r\n    normalizedProps = {...normalizedProps.fluid, aspectRatio: 1}\r\n    let alignment;\r\n    if(props.align === 'right'){\r\n        alignment = '0 0 0 auto'\r\n    } else if(props.align === 'left'){\r\n        alignment = '0 auto 0 0'\r\n    }else{\r\n        alignment = '0 auto'\r\n    }\r\n\r\n    if (props.fluid && props.fluid.presentationWidth) {\r\n        normalizedProps = {\r\n            ...props,\r\n            style: {\r\n                ...(props.style || {}),\r\n                maxWidth: props.fluid.presentationWidth,\r\n                margin: alignment, \r\n            },\r\n        }\r\n    }\r\n\r\n    return <Img {...normalizedProps} />\r\n}\r\n\r\nexport default NonStretchedImage;"],"sourceRoot":""}